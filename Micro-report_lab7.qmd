---
title: "Micro-report_lab7. Group 18"
author: 
  - "Kacper Maciejewski (s243548)"
  - "Sofia Russo (252054)"
  - "Aleksandra Wozniak (253713)"
  - "Gabriel Loayza (252608)"
  - "Dagmar Geevers (252256)"
format:
  html:
    embed-resources: true
editor: visual
---

## Load libraries

```{r}
#| echo: false
library(tidyverse)
library(broom)
library(ggplot2)
```

## Load data

```{r}
load("data/gravier.RData")
```

## Compute PCA

```{r}
pca_fit <- gravier$x %>%
  select(where(is.numeric)) %>%
  prcomp(scale = TRUE)
```

## Plot first two PCs

```{r}
pca_fit %>%
  augment(gravier$x) %>%
  mutate(outcome = gravier$y) %>%
  ggplot(aes(.fittedPC1, .fittedPC2, color = outcome)) + 
  geom_point(size = 1.5) +
  scale_color_manual(
    values = c(poor = "#D55E00", good = "#0072B2")
  )   
 
```

Just two components explain too little variance to separate breast cancer outcomes. As we have almost 3k genes, it is very likely we would need something like 10 components the least.

## Look at the data in PC coordinates

```{r}
# extract rotation matrix
rot <- tidy(pca_fit, matrix = "rotation")

# get top 10 genes by combined controbutions
top <- rot %>%
  filter(PC %in% c(1, 2)) %>%
  pivot_wider(names_from = PC, names_prefix = "PC", values_from = value) %>%
  mutate(contrib = sqrt(PC1^2 + PC2^2)) %>%
  slice_max(contrib, n = 10)

# define arrow style for plotting
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)

# plot rotation matrix
ggplot(top, aes(PC1 * 20, PC2 * 20)) +
  geom_segment(aes(xend = 0, yend = 0),
               arrow = arrow_style,
               color = "gray50") +
  geom_text(aes(label = column), hjust = 1, size = 3, color = "#904C2F") +
  coord_fixed() +
  theme_minimal() +
  ggtitle("Top 10 genes contributing to PC1 and PC2")
```

In the figure, each arrow is a gene and points in the direction where it explains variation the most across first and second PCs. In theory, longer arrows have stronger influence on how samples separate in the PCA space. Because the loading values are very small and similar in magnitude, all arrows appear nearly the same length, meaning the top genes contribute at comparable levels to these components. In practice, as we have almost 3k genes, variation cannot be sufficently captured by just two components. In the next section, we will examine how many PCs we need.

## Look at the variance explained by each PC

```{r}
#extracting values that indicate the strength of the each component
variance_data <- tidy(pca_fit, matrix = "eigenvalues") %>%
  mutate(PC = as.numeric(gsub("PC", "", PC)))  # Convert PC names to numeric

# each pC is treated as numeric
ggplot(data = variance_data, aes(x = PC, y = percent)) + 
  geom_col(fill = "blue") +
  labs(
    title = "Percent of variance explained by each PC",
    x = "Principal Component",
    y = "Percent of explained variance"
  ) +
  scale_x_continuous(breaks = seq(0, max(variance_data$PC), by = 5)) +
  theme_minimal()



```

## Look at the cumulative variance

This graph shows the percentage of total variation in the data, which is explained by each PC created in PCA. Higher value of each PC means, that this component has a bigger proportion of the differences in the data

```{r}
# extract variance explained by each component
variance_data <- tidy(pca_fit, matrix = "eigenvalues")

# add cumulative variance column
variance_data <- variance_data %>%
  mutate(cumulative = cumsum(percent))

# plot cum var
ggplot(variance_data, aes(x = PC, y = cumulative)) +
  geom_line(size = 1) +
  geom_point(size = 2) +
  scale_x_continuous(breaks = seq(0, max(variance_data$PC), by = 5)) +
  labs(
    title = "Cumulative variance explained by principal components",
    x = "PC",
    y = "cumulative percent of explained variance"
  ) +
  theme_minimal()

```

As presented, in the gene expression space, we can explain virtually whole variance using 150 PCs. This is a great dimensional reduction, given that our matrix had almost 3k genes.
